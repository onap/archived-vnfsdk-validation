onap-vtp;r01123;The VNF or PNF CSAR package Manifest file MUST contain: VNF or PNF package meta-data, a list of all artifacts (both internal and external) entry’s including their respected URI’s, an algorithm to calculate a digest and a digest result calculated on the content of each artifacts, as specified in ETSI GS NFV-SOL004. The VNF or PNF Package MUST include VNF or PNF Identification Data to uniquely identify the resource for a given provider. The identification data must include: an identifier for the VNF or PNF, the name of the VNF or PNF as was given by the provider, description, provider and version. 
onap-vtp;r10087;The VNF package MUST contain all standard artifacts as specified in ETSI GS NFV-SOL004 including Manifest file, VNFD (or Main TOSCA/YAML based Service Template) and other optional artifacts. CSAR Manifest file as per SOL004 - for example ROOT\ MainServiceTemplate.mf 
onap-vtp;r15837;Major TOSCA Types specified in ETSI NFV-SOL001 standard draft. 
onap-vtp;r17852;The VNFD/PNFD MAY include TOSCA/YAML definitions that are not part of NFV Profile. If provided, these definitions MUST comply with TOSCA Simple Profile in YAML v.1.2. 
onap-vtp;r35854;The VNF/PNF Descriptor (VNFD/PNFD) provided by VNF/PNF vendor MUST comply with TOSCA/YAML based Service template for VNF/PNF descriptor specified in ETSI NFV-SOL001. 
onap-vtp;r57019;The PNF TOSCA CSAR package Manifest file MUST start with the PNF package metadata in the form of a name-value pairs. Each pair shall appear on a different line. The name is specified as following: -pnfd_provider -pnfd_name -pnfd_release_date_time -pnfd_archive_version 
onap-vtp;r87234;The VNF/PNF package provided by a VNF/PNF vendor MAY be either with TOSCA-Metadata directory (CSAR Option 1) or without TOSCA-Metadata directory (CSAR Option 2) as specified in ETSI GS NFV-SOL004. On-boarding entity (ONAP SDC) must support both options. 
onap-vtp;r130206;The VNF/PNF package shall contain a Digest (a.k.a. hash) for each of the components of the VNF package. The table of hashes is included in the manifest file, which is signed with the VNF provider private key. In addition, the VNF provider shall include a signing certificate that includes the VNF provider public key, following a pre-defined naming convention and located either at the root of the archive or in a predefined location (e.g. directory). 
onap-vtp;r146092;The VNF/PNF package Manifest file MUST contain: non-mano artifact set with following ONAP public tag -onap_ansible_playbooks -onap_others -onap_pm_dictionary -onap_pnf_sw_information -onap_scripts -onap_ves_events -onap_yang_modules 
onap-vtp;r293901;For a VNF/PNF package CSAR MUST contains a TOSCA-Metadata directory with the TOSCA.meta metadata file. The TOSCA.meta metadata file MUST includes block_0 with the Entry-Definitions keyword pointing to a TOSCA definitions YAML file. Additional keyname extension must be included as following: -ETSI-Entry-Manifest -ETSI-Entry-Change-Log 
onap-vtp;r787965;If the VNF or PNF CSAR Package utilizes Option 2 for package security, then the complete CSAR file MUST be digitally signed with the VNF or PNF provider private key. The VNF or PNF provider delivers one zip file consisting of the CSAR file, a signature file and a certificate file that includes the VNF or PNF provider public key. The certificate may also be included in the signature container, if the signature format allows that. The VNF or PNF provider creates a zip file consisting of the CSAR file with .csar extension, signature and certificate files. The signature and certificate files must be siblings of the CSAR file with extensions .cms and .cert respectively. 
onap-vtp;r816745;The VNF or PNF PROVIDER MUST provide the Service Provider with PM Meta Data (PM Dictionary) to support the analysis of PM events delivered to DCAE. The PM Dictionary is to be provided as a separate YAML artifact at onboarding and must follow the VES Event Listener Specification and VES Event Registration Specification which contain the format and content required. 
onap-vtp;r972082;The PNF software information file is included in the package and it MUST be compliant to:  - The file extension which contains the PNF software version must be .yaml  - The PNF software version information must be specified as following:   onap_pnf_sw_information:     - pnf_software_version:  "<version>" 
